// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: proto/data.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PutDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string     `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data *anypb.Any `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PutDataRequest) Reset() {
	*x = PutDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutDataRequest) ProtoMessage() {}

func (x *PutDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutDataRequest.ProtoReflect.Descriptor instead.
func (*PutDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_data_proto_rawDescGZIP(), []int{0}
}

func (x *PutDataRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PutDataRequest) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

type PutDataRespose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err  int32  `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *PutDataRespose) Reset() {
	*x = PutDataRespose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutDataRespose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutDataRespose) ProtoMessage() {}

func (x *PutDataRespose) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutDataRespose.ProtoReflect.Descriptor instead.
func (*PutDataRespose) Descriptor() ([]byte, []int) {
	return file_proto_data_proto_rawDescGZIP(), []int{1}
}

func (x *PutDataRespose) GetErr() int32 {
	if x != nil {
		return x.Err
	}
	return 0
}

func (x *PutDataRespose) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type PutDataStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string     `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data *anypb.Any `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PutDataStreamRequest) Reset() {
	*x = PutDataStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutDataStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutDataStreamRequest) ProtoMessage() {}

func (x *PutDataStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutDataStreamRequest.ProtoReflect.Descriptor instead.
func (*PutDataStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_data_proto_rawDescGZIP(), []int{2}
}

func (x *PutDataStreamRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PutDataStreamRequest) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

type PutDataStreamRespose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err  int32  `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *PutDataStreamRespose) Reset() {
	*x = PutDataStreamRespose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutDataStreamRespose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutDataStreamRespose) ProtoMessage() {}

func (x *PutDataStreamRespose) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutDataStreamRespose.ProtoReflect.Descriptor instead.
func (*PutDataStreamRespose) Descriptor() ([]byte, []int) {
	return file_proto_data_proto_rawDescGZIP(), []int{3}
}

func (x *PutDataStreamRespose) GetErr() int32 {
	if x != nil {
		return x.Err
	}
	return 0
}

func (x *PutDataStreamRespose) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type GetDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string     `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data *anypb.Any `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDataRequest) Reset() {
	*x = GetDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataRequest) ProtoMessage() {}

func (x *GetDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataRequest.ProtoReflect.Descriptor instead.
func (*GetDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_data_proto_rawDescGZIP(), []int{4}
}

func (x *GetDataRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetDataRequest) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDataRespose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err  int32      `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	Desc string     `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Type string     `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Data *anypb.Any `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDataRespose) Reset() {
	*x = GetDataRespose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataRespose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataRespose) ProtoMessage() {}

func (x *GetDataRespose) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataRespose.ProtoReflect.Descriptor instead.
func (*GetDataRespose) Descriptor() ([]byte, []int) {
	return file_proto_data_proto_rawDescGZIP(), []int{5}
}

func (x *GetDataRespose) GetErr() int32 {
	if x != nil {
		return x.Err
	}
	return 0
}

func (x *GetDataRespose) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GetDataRespose) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetDataRespose) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDataStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string     `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data *anypb.Any `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDataStreamRequest) Reset() {
	*x = GetDataStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataStreamRequest) ProtoMessage() {}

func (x *GetDataStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataStreamRequest.ProtoReflect.Descriptor instead.
func (*GetDataStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_data_proto_rawDescGZIP(), []int{6}
}

func (x *GetDataStreamRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetDataStreamRequest) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDataStreamRespose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err  int32      `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	Desc string     `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Type string     `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Data *anypb.Any `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDataStreamRespose) Reset() {
	*x = GetDataStreamRespose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_data_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataStreamRespose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataStreamRespose) ProtoMessage() {}

func (x *GetDataStreamRespose) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataStreamRespose.ProtoReflect.Descriptor instead.
func (*GetDataStreamRespose) Descriptor() ([]byte, []int) {
	return file_proto_data_proto_rawDescGZIP(), []int{7}
}

func (x *GetDataStreamRespose) GetErr() int32 {
	if x != nil {
		return x.Err
	}
	return 0
}

func (x *GetDataStreamRespose) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GetDataStreamRespose) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetDataStreamRespose) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_proto_data_proto protoreflect.FileDescriptor

var file_proto_data_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4e, 0x0a, 0x0e, 0x50, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x36, 0x0a, 0x0e, 0x50, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x54, 0x0a, 0x14,
	0x50, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x3c, 0x0a, 0x14, 0x50, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x22, 0x4e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x74, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x54, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7a, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xa5, 0x02, 0x0a, 0x0b, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x50, 0x75, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0d, 0x50, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x22, 0x00,
	0x28, 0x01, 0x12, 0x3b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x4f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01,
	0x42, 0x13, 0x5a, 0x11, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_data_proto_rawDescOnce sync.Once
	file_proto_data_proto_rawDescData = file_proto_data_proto_rawDesc
)

func file_proto_data_proto_rawDescGZIP() []byte {
	file_proto_data_proto_rawDescOnce.Do(func() {
		file_proto_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_data_proto_rawDescData)
	})
	return file_proto_data_proto_rawDescData
}

var file_proto_data_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_data_proto_goTypes = []interface{}{
	(*PutDataRequest)(nil),       // 0: proto.PutDataRequest
	(*PutDataRespose)(nil),       // 1: proto.PutDataRespose
	(*PutDataStreamRequest)(nil), // 2: proto.PutDataStreamRequest
	(*PutDataStreamRespose)(nil), // 3: proto.PutDataStreamRespose
	(*GetDataRequest)(nil),       // 4: proto.GetDataRequest
	(*GetDataRespose)(nil),       // 5: proto.GetDataRespose
	(*GetDataStreamRequest)(nil), // 6: proto.GetDataStreamRequest
	(*GetDataStreamRespose)(nil), // 7: proto.GetDataStreamRespose
	(*anypb.Any)(nil),            // 8: google.protobuf.Any
}
var file_proto_data_proto_depIdxs = []int32{
	8,  // 0: proto.PutDataRequest.data:type_name -> google.protobuf.Any
	8,  // 1: proto.PutDataStreamRequest.data:type_name -> google.protobuf.Any
	8,  // 2: proto.GetDataRequest.data:type_name -> google.protobuf.Any
	8,  // 3: proto.GetDataRespose.data:type_name -> google.protobuf.Any
	8,  // 4: proto.GetDataStreamRequest.data:type_name -> google.protobuf.Any
	8,  // 5: proto.GetDataStreamRespose.data:type_name -> google.protobuf.Any
	0,  // 6: proto.DataService.PutData:input_type -> proto.PutDataRequest
	2,  // 7: proto.DataService.PutDataStream:input_type -> proto.PutDataStreamRequest
	4,  // 8: proto.DataService.GetData:input_type -> proto.GetDataRequest
	6,  // 9: proto.DataService.GetDataStream:input_type -> proto.GetDataStreamRequest
	1,  // 10: proto.DataService.PutData:output_type -> proto.PutDataRespose
	3,  // 11: proto.DataService.PutDataStream:output_type -> proto.PutDataStreamRespose
	5,  // 12: proto.DataService.GetData:output_type -> proto.GetDataRespose
	7,  // 13: proto.DataService.GetDataStream:output_type -> proto.GetDataStreamRespose
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_data_proto_init() }
func file_proto_data_proto_init() {
	if File_proto_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutDataRespose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutDataStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutDataStreamRespose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataRespose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_data_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataStreamRespose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_data_proto_goTypes,
		DependencyIndexes: file_proto_data_proto_depIdxs,
		MessageInfos:      file_proto_data_proto_msgTypes,
	}.Build()
	File_proto_data_proto = out.File
	file_proto_data_proto_rawDesc = nil
	file_proto_data_proto_goTypes = nil
	file_proto_data_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DataServiceClient is the client API for DataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataServiceClient interface {
	PutData(ctx context.Context, in *PutDataRequest, opts ...grpc.CallOption) (*PutDataRespose, error)
	PutDataStream(ctx context.Context, opts ...grpc.CallOption) (DataService_PutDataStreamClient, error)
	GetData(ctx context.Context, in *GetDataRequest, opts ...grpc.CallOption) (DataService_GetDataClient, error)
	GetDataStream(ctx context.Context, opts ...grpc.CallOption) (DataService_GetDataStreamClient, error)
}

type dataServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDataServiceClient(cc grpc.ClientConnInterface) DataServiceClient {
	return &dataServiceClient{cc}
}

func (c *dataServiceClient) PutData(ctx context.Context, in *PutDataRequest, opts ...grpc.CallOption) (*PutDataRespose, error) {
	out := new(PutDataRespose)
	err := c.cc.Invoke(ctx, "/proto.DataService/PutData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) PutDataStream(ctx context.Context, opts ...grpc.CallOption) (DataService_PutDataStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DataService_serviceDesc.Streams[0], "/proto.DataService/PutDataStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataServicePutDataStreamClient{stream}
	return x, nil
}

type DataService_PutDataStreamClient interface {
	Send(*PutDataStreamRequest) error
	CloseAndRecv() (*PutDataStreamRespose, error)
	grpc.ClientStream
}

type dataServicePutDataStreamClient struct {
	grpc.ClientStream
}

func (x *dataServicePutDataStreamClient) Send(m *PutDataStreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dataServicePutDataStreamClient) CloseAndRecv() (*PutDataStreamRespose, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PutDataStreamRespose)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dataServiceClient) GetData(ctx context.Context, in *GetDataRequest, opts ...grpc.CallOption) (DataService_GetDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DataService_serviceDesc.Streams[1], "/proto.DataService/GetData", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataServiceGetDataClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DataService_GetDataClient interface {
	Recv() (*GetDataRespose, error)
	grpc.ClientStream
}

type dataServiceGetDataClient struct {
	grpc.ClientStream
}

func (x *dataServiceGetDataClient) Recv() (*GetDataRespose, error) {
	m := new(GetDataRespose)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dataServiceClient) GetDataStream(ctx context.Context, opts ...grpc.CallOption) (DataService_GetDataStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DataService_serviceDesc.Streams[2], "/proto.DataService/GetDataStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataServiceGetDataStreamClient{stream}
	return x, nil
}

type DataService_GetDataStreamClient interface {
	Send(*GetDataStreamRequest) error
	Recv() (*GetDataStreamRespose, error)
	grpc.ClientStream
}

type dataServiceGetDataStreamClient struct {
	grpc.ClientStream
}

func (x *dataServiceGetDataStreamClient) Send(m *GetDataStreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dataServiceGetDataStreamClient) Recv() (*GetDataStreamRespose, error) {
	m := new(GetDataStreamRespose)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DataServiceServer is the server API for DataService service.
type DataServiceServer interface {
	PutData(context.Context, *PutDataRequest) (*PutDataRespose, error)
	PutDataStream(DataService_PutDataStreamServer) error
	GetData(*GetDataRequest, DataService_GetDataServer) error
	GetDataStream(DataService_GetDataStreamServer) error
}

// UnimplementedDataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDataServiceServer struct {
}

func (*UnimplementedDataServiceServer) PutData(context.Context, *PutDataRequest) (*PutDataRespose, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutData not implemented")
}
func (*UnimplementedDataServiceServer) PutDataStream(DataService_PutDataStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method PutDataStream not implemented")
}
func (*UnimplementedDataServiceServer) GetData(*GetDataRequest, DataService_GetDataServer) error {
	return status.Errorf(codes.Unimplemented, "method GetData not implemented")
}
func (*UnimplementedDataServiceServer) GetDataStream(DataService_GetDataStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GetDataStream not implemented")
}

func RegisterDataServiceServer(s *grpc.Server, srv DataServiceServer) {
	s.RegisterService(&_DataService_serviceDesc, srv)
}

func _DataService_PutData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).PutData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DataService/PutData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).PutData(ctx, req.(*PutDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_PutDataStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DataServiceServer).PutDataStream(&dataServicePutDataStreamServer{stream})
}

type DataService_PutDataStreamServer interface {
	SendAndClose(*PutDataStreamRespose) error
	Recv() (*PutDataStreamRequest, error)
	grpc.ServerStream
}

type dataServicePutDataStreamServer struct {
	grpc.ServerStream
}

func (x *dataServicePutDataStreamServer) SendAndClose(m *PutDataStreamRespose) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dataServicePutDataStreamServer) Recv() (*PutDataStreamRequest, error) {
	m := new(PutDataStreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _DataService_GetData_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetDataRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DataServiceServer).GetData(m, &dataServiceGetDataServer{stream})
}

type DataService_GetDataServer interface {
	Send(*GetDataRespose) error
	grpc.ServerStream
}

type dataServiceGetDataServer struct {
	grpc.ServerStream
}

func (x *dataServiceGetDataServer) Send(m *GetDataRespose) error {
	return x.ServerStream.SendMsg(m)
}

func _DataService_GetDataStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DataServiceServer).GetDataStream(&dataServiceGetDataStreamServer{stream})
}

type DataService_GetDataStreamServer interface {
	Send(*GetDataStreamRespose) error
	Recv() (*GetDataStreamRequest, error)
	grpc.ServerStream
}

type dataServiceGetDataStreamServer struct {
	grpc.ServerStream
}

func (x *dataServiceGetDataStreamServer) Send(m *GetDataStreamRespose) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dataServiceGetDataStreamServer) Recv() (*GetDataStreamRequest, error) {
	m := new(GetDataStreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _DataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DataService",
	HandlerType: (*DataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PutData",
			Handler:    _DataService_PutData_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PutDataStream",
			Handler:       _DataService_PutDataStream_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GetData",
			Handler:       _DataService_GetData_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetDataStream",
			Handler:       _DataService_GetDataStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "proto/data.proto",
}
